///////////////////////////////////////////////////////////
//  Project.cs
//  Implementation of the Class Project
//  Generated by Enterprise Architect
//  Created on:      2014/08/05 9:05:17
//  Original author: shiba
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using Microsoft.VisualBasic.FileIO;
using System;
namespace AttendeeAllocator
{
    [Serializable]
	public class Project {

        /// <summary>
        /// プロジェクトファイルパス
        /// </summary>
        private string _ProjectFile;
        /// <summary>
        /// プロジェクト編集中フラグ
        /// </summary>
        private bool _ProjectEdited;
        /// <summary>
        /// プロジェクト未セーブフラグ
        /// </summary>
        private bool _ProjectNotSaved;
        /// <summary>
        /// 参加者のデータ
        /// </summary>
        private AttendeeInfo _AttendeeInfo;
        /// <summary>
        /// グループの定義
        /// </summary>
        private GroupInfo _GroupInfo;
        /// <summary>
        /// 区画（部屋）の定義
        /// </summary>
        private CompartmentInfo _CompartmentInfo;

        /// <summary>
        /// 割り当て結果
        /// </summary>
        private List<Compartment> _AllocationResult;
        /// <summary>
        /// 名簿の項目のうち出力に利用する項目のリスト
        /// </summary>
        private List<string> _ListLayoutItem;
        /// <summary>
        /// 設定
        /// </summary>
        private Settings _Settings;


        //------------------------
        // const
        //------------------------



		public Project(){

            //生成時に中身を全クリア
            _ProjectFile = "(無題)";
            _ProjectEdited = false;
            _ProjectNotSaved = true;

            _AttendeeInfo = new AttendeeInfo();
            _GroupInfo = new GroupInfo();
            _CompartmentInfo = new CompartmentInfo();
            _AllocationResult = new List<Compartment>();
            _ListLayoutItem = new List<string>();
            _Settings = new Settings();
		}

		~Project(){

		}

		public virtual void Dispose(){

		}
        //------------------------
        // Methods
        //------------------------

        /// <summary>
        /// 名簿ファイルから無条件で読み込み
        /// </summary>
        /// <param name="csvFilePath"></param>
        /// <returns></returns>
        public bool OpenCsvFile( CsvData data, string csvFilePath)
        {
            //CSV読み込み、無条件で更新
            if (data.ReadFileAuto(csvFilePath) == true)
            {
                //名簿が更新されたので編集中フラグON
                data.Edited = true;
                //読んだ直後で（名簿ファイルとの）差が無いはずなので（名簿の)未セーブフラグはOFF
                data.NotSaved = false;
                //プロジェクトとしては編集が行われたことになるので編集中フラグON
                _ProjectEdited = true;
                //プロジェクトとしては内容が変更されているので未セーブフラグON
                _ProjectNotSaved = true;

                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 保存確認
        /// </summary>
        /// <returns></returns>
        public bool IsSaved(){
            return !_ProjectNotSaved;
        }

        /// <summary>
        /// 名簿の保存状態確認
        /// </summary>
        /// <returns></returns>
        public bool IsListAttendeeSaved()
        {
            return !_AttendeeInfo.NotSaved;
        }

        /// <summary>
        /// グループデータの保存状態確認
        /// </summary>
        /// <returns></returns>
        public bool IsListGroupSaved()
        {
            return !_GroupInfo.NotSaved;
        }
        /// <summary>
        /// 区画データの保存状態
        /// </summary>
        /// <returns></returns>
        public bool IsCompartmentDefinitionSaved()
        {
            return !_CompartmentInfo.NotSaved;
        }

        //------------------------
        // Properties
        //------------------------
        public string ProjectFilePath
        {
            get { return _ProjectFile; }
            set { _ProjectFile = value; }
        }

        public string AttendeeFilePath
        {
            get { return _AttendeeInfo.FilePath; }
        }
        public AttendeeInfo AttendeeData
        {
            get { return _AttendeeInfo; }
            set { _AttendeeInfo = value; }
        }
        public GroupInfo GroupData
        {
            get { return _GroupInfo; }
            set { _GroupInfo = value; }
        }
        public string GroupFilePath
        {
            get { return _GroupInfo.FilePath; }
            set { _GroupInfo.FilePath = value; }
        }
        public CompartmentInfo CompartmentData
        {
            get { return _CompartmentInfo; }
            set { _CompartmentInfo = value; }
        }
        public string CompartmentFilePath
        {
            get { return _CompartmentInfo.FilePath; }
            set { _CompartmentInfo.FilePath = value;}
        }
        public bool ProjectEdited
        {
            get { return _ProjectEdited; }
            set { _ProjectEdited = value; }
        }


        /// <summary>
        /// 総参加者数
        /// </summary>
        public int AttendeeNum
        {
            get { return _AttendeeInfo.Rows.Count; }
        }



	}//end Project

}//end namespace SWESTAttendeeAllocator